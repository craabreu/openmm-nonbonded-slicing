#
# Testing
#

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/tests)

INCLUDE_DIRECTORIES(${OPENCL_INCLUDE_DIR})

# Automatically create tests using files named "Test*.cpp"
FILE(GLOB TEST_PROGS "*Test*.cpp")
FOREACH(TEST_PROG ${TEST_PROGS})
    GET_FILENAME_COMPONENT(TEST_ROOT ${TEST_PROG} NAME_WE)

    # Link with shared library
    ADD_EXECUTABLE(${TEST_ROOT} ${TEST_PROG})
    TARGET_LINK_LIBRARIES(${TEST_ROOT} ${SHARED_NONBONDED_SLICING_TARGET} ${SHARED_TARGET} ${CMAKE_THREAD_LIBS})
    IF(APPLE)
        # On macOS, prefer system OpenCL framework if available
        FIND_LIBRARY(OPENCL_FRAMEWORK OpenCL)
        IF(OPENCL_FRAMEWORK)
            SET_TARGET_PROPERTIES(${TEST_ROOT} PROPERTIES LINK_FLAGS "-F/System/Library/Frameworks -framework OpenCL ${EXTRA_COMPILE_FLAGS}")
        ELSE()
            # Fallback to Library/Frameworks if system framework not found
            SET_TARGET_PROPERTIES(${TEST_ROOT} PROPERTIES LINK_FLAGS "-F/Library/Frameworks -framework OpenCL ${EXTRA_COMPILE_FLAGS}")
        ENDIF()
    ELSE()
        TARGET_LINK_LIBRARIES(${TEST_ROOT} OpenCL)
        SET_TARGET_PROPERTIES(${TEST_ROOT} PROPERTIES LINK_FLAGS "${EXTRA_COMPILE_FLAGS}")
    ENDIF()
    SET_TARGET_PROPERTIES(${TEST_ROOT} PROPERTIES COMPILE_FLAGS "${EXTRA_COMPILE_FLAGS}")
    ADD_TEST(${TEST_ROOT}Single ${EXECUTABLE_OUTPUT_PATH}/${TEST_ROOT} single)
    ADD_TEST(${TEST_ROOT}Mixed ${EXECUTABLE_OUTPUT_PATH}/${TEST_ROOT} mixed)
    ADD_TEST(${TEST_ROOT}Double ${EXECUTABLE_OUTPUT_PATH}/${TEST_ROOT} double)

ENDFOREACH(TEST_PROG ${TEST_PROGS})
